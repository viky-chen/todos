// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// AuthController_login
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/login`.
    /// - Remark: Generated from `#/paths//api/todos/auth/login/post(AuthController_login)`.
    func AuthController_login(_ input: Operations.AuthController_login.Input) async throws -> Operations.AuthController_login.Output
    /// AuthController_logout
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/logout`.
    /// - Remark: Generated from `#/paths//api/todos/auth/logout/post(AuthController_logout)`.
    func AuthController_logout(_ input: Operations.AuthController_logout.Input) async throws -> Operations.AuthController_logout.Output
    /// AuthController_register
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/register`.
    /// - Remark: Generated from `#/paths//api/todos/auth/register/post(AuthController_register)`.
    func AuthController_register(_ input: Operations.AuthController_register.Input) async throws -> Operations.AuthController_register.Output
    /// UserController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/get(UserController_findAll)`.
    func UserController_findAll(_ input: Operations.UserController_findAll.Input) async throws -> Operations.UserController_findAll.Output
    /// UserController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/post(UserController_create)`.
    func UserController_create(_ input: Operations.UserController_create.Input) async throws -> Operations.UserController_create.Output
    /// UserController_getProfile
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/profile`.
    /// - Remark: Generated from `#/paths//api/todos/user/profile/get(UserController_getProfile)`.
    func UserController_getProfile(_ input: Operations.UserController_getProfile.Input) async throws -> Operations.UserController_getProfile.Output
    /// UserController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/get(UserController_findOne)`.
    func UserController_findOne(_ input: Operations.UserController_findOne.Input) async throws -> Operations.UserController_findOne.Output
    /// UserController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/patch(UserController_update)`.
    func UserController_update(_ input: Operations.UserController_update.Input) async throws -> Operations.UserController_update.Output
    /// UserController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/delete(UserController_remove)`.
    func UserController_remove(_ input: Operations.UserController_remove.Input) async throws -> Operations.UserController_remove.Output
    /// TaskController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/get(TaskController_findAll)`.
    func TaskController_findAll(_ input: Operations.TaskController_findAll.Input) async throws -> Operations.TaskController_findAll.Output
    /// TaskController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/post(TaskController_create)`.
    func TaskController_create(_ input: Operations.TaskController_create.Input) async throws -> Operations.TaskController_create.Output
    /// TaskController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/get(TaskController_findOne)`.
    func TaskController_findOne(_ input: Operations.TaskController_findOne.Input) async throws -> Operations.TaskController_findOne.Output
    /// TaskController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/patch(TaskController_update)`.
    func TaskController_update(_ input: Operations.TaskController_update.Input) async throws -> Operations.TaskController_update.Output
    /// TaskController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/delete(TaskController_remove)`.
    func TaskController_remove(_ input: Operations.TaskController_remove.Input) async throws -> Operations.TaskController_remove.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// AuthController_login
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/login`.
    /// - Remark: Generated from `#/paths//api/todos/auth/login/post(AuthController_login)`.
    internal func AuthController_login(
        headers: Operations.AuthController_login.Input.Headers = .init(),
        body: Operations.AuthController_login.Input.Body? = nil
    ) async throws -> Operations.AuthController_login.Output {
        try await AuthController_login(Operations.AuthController_login.Input(
            headers: headers,
            body: body
        ))
    }
    /// AuthController_logout
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/logout`.
    /// - Remark: Generated from `#/paths//api/todos/auth/logout/post(AuthController_logout)`.
    internal func AuthController_logout(headers: Operations.AuthController_logout.Input.Headers = .init()) async throws -> Operations.AuthController_logout.Output {
        try await AuthController_logout(Operations.AuthController_logout.Input(headers: headers))
    }
    /// AuthController_register
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/register`.
    /// - Remark: Generated from `#/paths//api/todos/auth/register/post(AuthController_register)`.
    internal func AuthController_register(
        headers: Operations.AuthController_register.Input.Headers = .init(),
        body: Operations.AuthController_register.Input.Body? = nil
    ) async throws -> Operations.AuthController_register.Output {
        try await AuthController_register(Operations.AuthController_register.Input(
            headers: headers,
            body: body
        ))
    }
    /// UserController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/get(UserController_findAll)`.
    internal func UserController_findAll(headers: Operations.UserController_findAll.Input.Headers = .init()) async throws -> Operations.UserController_findAll.Output {
        try await UserController_findAll(Operations.UserController_findAll.Input(headers: headers))
    }
    /// UserController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/post(UserController_create)`.
    internal func UserController_create(
        headers: Operations.UserController_create.Input.Headers = .init(),
        body: Operations.UserController_create.Input.Body? = nil
    ) async throws -> Operations.UserController_create.Output {
        try await UserController_create(Operations.UserController_create.Input(
            headers: headers,
            body: body
        ))
    }
    /// UserController_getProfile
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/profile`.
    /// - Remark: Generated from `#/paths//api/todos/user/profile/get(UserController_getProfile)`.
    internal func UserController_getProfile(headers: Operations.UserController_getProfile.Input.Headers = .init()) async throws -> Operations.UserController_getProfile.Output {
        try await UserController_getProfile(Operations.UserController_getProfile.Input(headers: headers))
    }
    /// UserController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/get(UserController_findOne)`.
    internal func UserController_findOne(
        path: Operations.UserController_findOne.Input.Path,
        headers: Operations.UserController_findOne.Input.Headers = .init()
    ) async throws -> Operations.UserController_findOne.Output {
        try await UserController_findOne(Operations.UserController_findOne.Input(
            path: path,
            headers: headers
        ))
    }
    /// UserController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/patch(UserController_update)`.
    internal func UserController_update(
        path: Operations.UserController_update.Input.Path,
        headers: Operations.UserController_update.Input.Headers = .init(),
        body: Operations.UserController_update.Input.Body? = nil
    ) async throws -> Operations.UserController_update.Output {
        try await UserController_update(Operations.UserController_update.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// UserController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/delete(UserController_remove)`.
    internal func UserController_remove(
        path: Operations.UserController_remove.Input.Path,
        headers: Operations.UserController_remove.Input.Headers = .init()
    ) async throws -> Operations.UserController_remove.Output {
        try await UserController_remove(Operations.UserController_remove.Input(
            path: path,
            headers: headers
        ))
    }
    /// TaskController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/get(TaskController_findAll)`.
    internal func TaskController_findAll(headers: Operations.TaskController_findAll.Input.Headers = .init()) async throws -> Operations.TaskController_findAll.Output {
        try await TaskController_findAll(Operations.TaskController_findAll.Input(headers: headers))
    }
    /// TaskController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/post(TaskController_create)`.
    internal func TaskController_create(
        headers: Operations.TaskController_create.Input.Headers = .init(),
        body: Operations.TaskController_create.Input.Body? = nil
    ) async throws -> Operations.TaskController_create.Output {
        try await TaskController_create(Operations.TaskController_create.Input(
            headers: headers,
            body: body
        ))
    }
    /// TaskController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/get(TaskController_findOne)`.
    internal func TaskController_findOne(
        path: Operations.TaskController_findOne.Input.Path,
        headers: Operations.TaskController_findOne.Input.Headers = .init()
    ) async throws -> Operations.TaskController_findOne.Output {
        try await TaskController_findOne(Operations.TaskController_findOne.Input(
            path: path,
            headers: headers
        ))
    }
    /// TaskController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/patch(TaskController_update)`.
    internal func TaskController_update(
        path: Operations.TaskController_update.Input.Path,
        headers: Operations.TaskController_update.Input.Headers = .init(),
        body: Operations.TaskController_update.Input.Body? = nil
    ) async throws -> Operations.TaskController_update.Output {
        try await TaskController_update(Operations.TaskController_update.Input(
            path: path,
            headers: headers,
            body: body
        ))
    }
    /// TaskController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/delete(TaskController_remove)`.
    internal func TaskController_remove(
        path: Operations.TaskController_remove.Input.Path,
        headers: Operations.TaskController_remove.Input.Headers = .init()
    ) async throws -> Operations.TaskController_remove.Output {
        try await TaskController_remove(Operations.TaskController_remove.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    internal enum Server1 {
        internal static func url() throws -> Foundation.URL {
            try Foundation.URL(
                validatingOpenAPIServerURL: "http://localhost:3000/api",
                variables: []
            )
        }
    }
    @available(*, deprecated, renamed: "Servers.Server1.url")
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "http://localhost:3000/api",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// - Remark: Generated from `#/components/schemas/LoginUserDto`.
        internal struct LoginUserDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LoginUserDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/LoginUserDto/password`.
            internal var password: Swift.String
            /// Creates a new `LoginUserDto`.
            ///
            /// - Parameters:
            ///   - name:
            ///   - password:
            internal init(
                name: Swift.String,
                password: Swift.String
            ) {
                self.name = name
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case name
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/LoginResponse`.
        internal struct LoginResponse: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/LoginResponse/access_token`.
            internal var access_token: Swift.String
            /// Creates a new `LoginResponse`.
            ///
            /// - Parameters:
            ///   - access_token:
            internal init(access_token: Swift.String) {
                self.access_token = access_token
            }
            internal enum CodingKeys: String, CodingKey {
                case access_token
            }
        }
        /// - Remark: Generated from `#/components/schemas/CreateUserDto`.
        internal struct CreateUserDto: Codable, Hashable, Sendable {
            /// 是否激活
            ///
            /// - Remark: Generated from `#/components/schemas/CreateUserDto/isActive`.
            internal var isActive: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/CreateUserDto/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/CreateUserDto/password`.
            internal var password: Swift.String
            /// Creates a new `CreateUserDto`.
            ///
            /// - Parameters:
            ///   - isActive: 是否激活
            ///   - name:
            ///   - password:
            internal init(
                isActive: Swift.Bool? = nil,
                name: Swift.String,
                password: Swift.String
            ) {
                self.isActive = isActive
                self.name = name
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case isActive
                case name
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateUserDto`.
        internal struct UpdateUserDto: Codable, Hashable, Sendable {
            /// User is active or not
            ///
            /// - Remark: Generated from `#/components/schemas/UpdateUserDto/isActive`.
            internal var isActive: OpenAPIRuntime.OpenAPIObjectContainer?
            /// - Remark: Generated from `#/components/schemas/UpdateUserDto/name`.
            internal var name: Swift.String?
            /// Creates a new `UpdateUserDto`.
            ///
            /// - Parameters:
            ///   - isActive: User is active or not
            ///   - name:
            internal init(
                isActive: OpenAPIRuntime.OpenAPIObjectContainer? = nil,
                name: Swift.String? = nil
            ) {
                self.isActive = isActive
                self.name = name
            }
            internal enum CodingKeys: String, CodingKey {
                case isActive
                case name
            }
        }
        /// - Remark: Generated from `#/components/schemas/CreateTaskDto`.
        internal struct CreateTaskDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/CreateTaskDto/id`.
            internal var id: Swift.Double?
            /// - Remark: Generated from `#/components/schemas/CreateTaskDto/title`.
            internal var title: Swift.String
            /// - Remark: Generated from `#/components/schemas/CreateTaskDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/CreateTaskDto/completed`.
            internal var completed: Swift.Bool?
            /// Creates a new `CreateTaskDto`.
            ///
            /// - Parameters:
            ///   - id:
            ///   - title:
            ///   - description:
            ///   - completed:
            internal init(
                id: Swift.Double? = nil,
                title: Swift.String,
                description: Swift.String? = nil,
                completed: Swift.Bool? = nil
            ) {
                self.id = id
                self.title = title
                self.description = description
                self.completed = completed
            }
            internal enum CodingKeys: String, CodingKey {
                case id
                case title
                case description
                case completed
            }
        }
        /// - Remark: Generated from `#/components/schemas/UpdateTaskDto`.
        internal struct UpdateTaskDto: Codable, Hashable, Sendable {
            /// - Remark: Generated from `#/components/schemas/UpdateTaskDto/title`.
            internal var title: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateTaskDto/description`.
            internal var description: Swift.String?
            /// - Remark: Generated from `#/components/schemas/UpdateTaskDto/completed`.
            internal var completed: Swift.Bool?
            /// Creates a new `UpdateTaskDto`.
            ///
            /// - Parameters:
            ///   - title:
            ///   - description:
            ///   - completed:
            internal init(
                title: Swift.String? = nil,
                description: Swift.String? = nil,
                completed: Swift.Bool? = nil
            ) {
                self.title = title
                self.description = description
                self.completed = completed
            }
            internal enum CodingKeys: String, CodingKey {
                case title
                case description
                case completed
            }
        }
        /// - Remark: Generated from `#/components/schemas/RegisterResponse`.
        internal struct RegisterResponse: Codable, Hashable, Sendable {
            /// 是否激活
            ///
            /// - Remark: Generated from `#/components/schemas/RegisterResponse/isActive`.
            internal var isActive: Swift.Bool?
            /// - Remark: Generated from `#/components/schemas/RegisterResponse/name`.
            internal var name: Swift.String
            /// - Remark: Generated from `#/components/schemas/RegisterResponse/password`.
            internal var password: Swift.String
            /// Creates a new `RegisterResponse`.
            ///
            /// - Parameters:
            ///   - isActive: 是否激活
            ///   - name:
            ///   - password:
            internal init(
                isActive: Swift.Bool? = nil,
                name: Swift.String,
                password: Swift.String
            ) {
                self.isActive = isActive
                self.name = name
                self.password = password
            }
            internal enum CodingKeys: String, CodingKey {
                case isActive
                case name
                case password
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// AuthController_login
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/login`.
    /// - Remark: Generated from `#/paths//api/todos/auth/login/post(AuthController_login)`.
    internal enum AuthController_login {
        internal static let id: Swift.String = "AuthController_login"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/auth/login/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_login.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_login.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.AuthController_login.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/auth/login/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/auth/login/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.LoginUserDto)
            }
            internal var body: Operations.AuthController_login.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.AuthController_login.Input.Headers = .init(),
                body: Operations.AuthController_login.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/auth/login/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/auth/login/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.LoginResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.LoginResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.AuthController_login.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.AuthController_login.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/auth/login/post(AuthController_login)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_login.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.AuthController_login.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// AuthController_logout
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/logout`.
    /// - Remark: Generated from `#/paths//api/todos/auth/logout/post(AuthController_logout)`.
    internal enum AuthController_logout {
        internal static let id: Swift.String = "AuthController_logout"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/auth/logout/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_logout.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_logout.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.AuthController_logout.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.AuthController_logout.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/auth/logout/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/auth/logout/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.RegisterResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.RegisterResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.AuthController_logout.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.AuthController_logout.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/auth/logout/post(AuthController_logout)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_logout.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.AuthController_logout.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// AuthController_register
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/auth/register`.
    /// - Remark: Generated from `#/paths//api/todos/auth/register/post(AuthController_register)`.
    internal enum AuthController_register {
        internal static let id: Swift.String = "AuthController_register"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/auth/register/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_register.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_register.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.AuthController_register.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/auth/register/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/auth/register/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateUserDto)
            }
            internal var body: Operations.AuthController_register.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.AuthController_register.Input.Headers = .init(),
                body: Operations.AuthController_register.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/auth/register/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/auth/register/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.RegisterResponse)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.RegisterResponse {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.AuthController_register.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.AuthController_register.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/auth/register/post(AuthController_register)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_register.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.AuthController_register.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/get(UserController_findAll)`.
    internal enum UserController_findAll {
        internal static let id: Swift.String = "UserController_findAll"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_findAll.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_findAll.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_findAll.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.UserController_findAll.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_findAll.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_findAll.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/get(UserController_findAll)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserController_findAll.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.UserController_findAll.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/user`.
    /// - Remark: Generated from `#/paths//api/todos/user/post(UserController_create)`.
    internal enum UserController_create {
        internal static let id: Swift.String = "UserController_create"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_create.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_create.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_create.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/user/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateUserDto)
            }
            internal var body: Operations.UserController_create.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.UserController_create.Input.Headers = .init(),
                body: Operations.UserController_create.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Created: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/POST/responses/201/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/POST/responses/201/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_create.Output.Created.Body
                /// Creates a new `Created`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_create.Output.Created.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/post(UserController_create)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.UserController_create.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            internal var created: Operations.UserController_create.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_getProfile
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/profile`.
    /// - Remark: Generated from `#/paths//api/todos/user/profile/get(UserController_getProfile)`.
    internal enum UserController_getProfile {
        internal static let id: Swift.String = "UserController_getProfile"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/profile/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_getProfile.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_getProfile.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_getProfile.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.UserController_getProfile.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/profile/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/profile/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_getProfile.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_getProfile.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/profile/get(UserController_getProfile)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserController_getProfile.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.UserController_getProfile.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/get(UserController_findOne)`.
    internal enum UserController_findOne {
        internal static let id: Swift.String = "UserController_findOne"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.UserController_findOne.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_findOne.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_findOne.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_findOne.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.UserController_findOne.Input.Path,
                headers: Operations.UserController_findOne.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/{id}/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_findOne.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_findOne.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/{id}/get(UserController_findOne)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserController_findOne.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.UserController_findOne.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/patch(UserController_update)`.
    internal enum UserController_update {
        internal static let id: Swift.String = "UserController_update"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.UserController_update.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_update.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_update.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_update.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateUserDto)
            }
            internal var body: Operations.UserController_update.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.UserController_update.Input.Path,
                headers: Operations.UserController_update.Input.Headers = .init(),
                body: Operations.UserController_update.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/{id}/PATCH/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_update.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_update.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/{id}/patch(UserController_update)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserController_update.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.UserController_update.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// UserController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/user/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/user/{id}/delete(UserController_remove)`.
    internal enum UserController_remove {
        internal static let id: Swift.String = "UserController_remove"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/DELETE/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.UserController_remove.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/user/{id}/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_remove.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserController_remove.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.UserController_remove.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.UserController_remove.Input.Path,
                headers: Operations.UserController_remove.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/user/{id}/DELETE/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/user/{id}/DELETE/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.UserController_remove.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.UserController_remove.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/user/{id}/delete(UserController_remove)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserController_remove.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.UserController_remove.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// TaskController_findAll
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/get(TaskController_findAll)`.
    internal enum TaskController_findAll {
        internal static let id: Swift.String = "TaskController_findAll"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/task/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_findAll.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_findAll.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.TaskController_findAll.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            internal init(headers: Operations.TaskController_findAll.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/task/GET/responses/200/content/application\/json`.
                    case json([Components.Schemas.CreateTaskDto])
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: [Components.Schemas.CreateTaskDto] {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.TaskController_findAll.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.TaskController_findAll.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/task/get(TaskController_findAll)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TaskController_findAll.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.TaskController_findAll.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// TaskController_create
    ///
    ///
    ///
    /// - Remark: HTTP `POST /api/todos/task`.
    /// - Remark: Generated from `#/paths//api/todos/task/post(TaskController_create)`.
    internal enum TaskController_create {
        internal static let id: Swift.String = "TaskController_create"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/task/POST/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_create.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_create.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.TaskController_create.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/task/POST/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.CreateTaskDto)
            }
            internal var body: Operations.TaskController_create.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            internal init(
                headers: Operations.TaskController_create.Input.Headers = .init(),
                body: Operations.TaskController_create.Input.Body? = nil
            ) {
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/POST/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/task/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.CreateTaskDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.CreateTaskDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.TaskController_create.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.TaskController_create.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/task/post(TaskController_create)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TaskController_create.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.TaskController_create.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// TaskController_findOne
    ///
    ///
    ///
    /// - Remark: HTTP `GET /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/get(TaskController_findOne)`.
    internal enum TaskController_findOne {
        internal static let id: Swift.String = "TaskController_findOne"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/GET/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/GET/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.TaskController_findOne.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_findOne.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_findOne.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.TaskController_findOne.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.TaskController_findOne.Input.Path,
                headers: Operations.TaskController_findOne.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/GET/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/task/{id}/GET/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.TaskController_findOne.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.TaskController_findOne.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/task/{id}/get(TaskController_findOne)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TaskController_findOne.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.TaskController_findOne.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// TaskController_update
    ///
    ///
    ///
    /// - Remark: HTTP `PATCH /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/patch(TaskController_update)`.
    internal enum TaskController_update {
        internal static let id: Swift.String = "TaskController_update"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/path/id`.
                internal var id: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.String) {
                    self.id = id
                }
            }
            internal var path: Operations.TaskController_update.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_update.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_update.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.TaskController_update.Input.Headers
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/requestBody`.
            internal enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/requestBody/content/application\/json`.
                case json(Components.Schemas.UpdateTaskDto)
            }
            internal var body: Operations.TaskController_update.Input.Body?
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            ///   - body:
            internal init(
                path: Operations.TaskController_update.Input.Path,
                headers: Operations.TaskController_update.Input.Headers = .init(),
                body: Operations.TaskController_update.Input.Body? = nil
            ) {
                self.path = path
                self.headers = headers
                self.body = body
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/task/{id}/PATCH/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.TaskController_update.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.TaskController_update.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/task/{id}/patch(TaskController_update)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TaskController_update.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.TaskController_update.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// TaskController_remove
    ///
    ///
    ///
    /// - Remark: HTTP `DELETE /api/todos/task/{id}`.
    /// - Remark: Generated from `#/paths//api/todos/task/{id}/delete(TaskController_remove)`.
    internal enum TaskController_remove {
        internal static let id: Swift.String = "TaskController_remove"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/DELETE/path`.
            internal struct Path: Sendable, Hashable {
                ///
                ///
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/DELETE/path/id`.
                internal var id: Swift.Double
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - id:
                internal init(id: Swift.Double) {
                    self.id = id
                }
            }
            internal var path: Operations.TaskController_remove.Input.Path
            /// - Remark: Generated from `#/paths/api/todos/task/{id}/DELETE/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_remove.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.TaskController_remove.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.TaskController_remove.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.TaskController_remove.Input.Path,
                headers: Operations.TaskController_remove.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/todos/task/{id}/DELETE/responses/200/content`.
                internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/todos/task/{id}/DELETE/responses/200/content/application\/json`.
                    case json(OpenAPIRuntime.OpenAPIObjectContainer)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: OpenAPIRuntime.OpenAPIObjectContainer {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.TaskController_remove.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.TaskController_remove.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/todos/task/{id}/delete(TaskController_remove)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.TaskController_remove.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.TaskController_remove.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
